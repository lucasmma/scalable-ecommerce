// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  name                String
  password            String
  documentNumber      String
  role                Role
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  Order Order[]
}

model ProductCategory {
  id                  String   @id @default(cuid())
  name                String
  deleted             Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  products            Product[]
}

model Product {
  id                  String   @id @default(cuid())
  name                String
  description         String
  price               Int
  stock               Int
  deleted             Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  categoryId          String?
  category            ProductCategory? @relation(fields: [categoryId], references: [id])

  OrderItem OrderItem[]
}

model OrderItem {
  id                  String   @id @default(cuid())
  quantity            Int
  price               Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  orderId             String
  order               Order @relation(fields: [orderId], references: [id])

  productId           String
  product             Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  CART
  CONFIRMED
  DELIVERED
}

model Order {
  id                  String   @id @default(cuid())
  total               Int
  address             String?
  status              OrderStatus
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  userId              String
  user                User @relation(fields: [userId], references: [id])

  items               OrderItem[]
}